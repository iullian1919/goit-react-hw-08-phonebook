{"version":3,"file":"static/js/800.dc1ed4d6.chunk.js","mappings":"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","sources":["store/contacts/selectors.js","components/ContactForm/index.js","components/ContactForm/ContactForm.jsx","components/AddContactModal/AddContactModal.jsx","components/ContactsItem/index.js","components/ContactsItem/ContactsItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\nexport const selectError = state => state.contacts.error;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectFilter = state => state.filter;\n","import ContactForm from './ContactForm';\n\nexport default ContactForm;\n","import React from 'react';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'store/contacts/operations';\nimport { selectContacts } from 'store/contacts/selectors';\nimport PropTypes from 'prop-types';\n\nimport { Button, Flex, FormControl, FormLabel, Input } from '@chakra-ui/react';\nimport { useMediaQuery } from '@chakra-ui/react';\n\nconst ContactForm = ({ close }) => {\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n  const [isLargerThan400] = useMediaQuery('(min-width: 400px)');\n\n  const handleInput = ev => {\n    if (ev.target.name === 'name') {\n      setName(ev.target.value);\n      return;\n    }\n    if (ev.target.name === 'phone') {\n      setPhone(ev.target.value);\n      return;\n    }\n  };\n\n  const handleSubmit = ev => {\n    ev.preventDefault();\n    const newContact = {\n      name,\n      number: phone,\n    };\n    if (\n      contacts.find(\n        el => el.name.toLowerCase() === newContact.name.toLocaleLowerCase()\n      )\n    ) {\n      alert(` ${newContact.name} is already in contacts`);\n      return;\n    }\n    dispatch(addContact(newContact));\n    close();\n    ev.target.reset();\n  };\n\n  return (\n    <form\n      style={{\n        maxWidth: '650px',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        padding: isLargerThan400 ? '20px' : '10px',\n      }}\n      onSubmit={handleSubmit}\n    >\n      <Flex direction=\"column\" align=\"center\">\n        <FormControl isRequired=\"true\">\n          <FormLabel>Name</FormLabel>\n          <Input required name=\"name\" type=\"text\" onInput={handleInput} />\n        </FormControl>\n        <FormControl isRequired=\"true\">\n          <FormLabel>Phone number</FormLabel>\n          <Input required name=\"phone\" type=\"phone\" onInput={handleInput} />\n        </FormControl>\n        <Flex justify=\"space-between\" ml={5}>\n          <Button colorScheme=\"blue\" mt={5} type=\"submit\">\n            Add contact\n          </Button>\n        </Flex>\n      </Flex>\n    </form>\n  );\n};\n\nContactForm.propTypes = {\n  close: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import React from 'react';\nimport ContactForm from '../ContactForm';\nimport PropTypes from 'prop-types';\nimport {\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalCloseButton,\n  Modal,\n  ModalBody,\n} from '@chakra-ui/react';\n\nexport function AddContactModal({ isOpen, onClose }) {\n  return (\n    <Modal isOpen={isOpen} onClose={onClose}>\n      <ModalOverlay />\n      <ModalContent>\n        <ModalHeader>Add Contact</ModalHeader>\n\n        <ModalBody>\n          <ModalCloseButton />\n          <ContactForm close={onClose} />\n        </ModalBody>\n      </ModalContent>\n    </Modal>\n  );\n}\n\nAddContactModal.propTypes = {\n  isOpen: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default AddContactModal;\n","import ContactsItem from './ContactsItem';\n\nexport default ContactsItem;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'store/contacts/operations';\nimport { Button, Td, Tr } from '@chakra-ui/react';\nimport { DeleteIcon } from '@chakra-ui/icons';\nimport PropTypes from 'prop-types';\n\nconst ContactsItem = ({ contact }) => {\n  const dispatch = useDispatch();\n  const handleDelete = () => {\n    dispatch(deleteContact(contact.id));\n  };\n  return (\n    <Tr>\n      <Td>{contact.name}</Td>\n      <Td>{contact.number}</Td>\n      <Td textAlign=\"right\">\n        <Button colorScheme=\"red\" onClick={handleDelete}>\n          <DeleteIcon color=\"inherit\" />\n        </Button>\n      </Td>\n    </Tr>\n  );\n};\n\nContactsItem.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default ContactsItem;\n","import React from 'react';\nimport ContactsItem from '../ContactsItem';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts, selectFilter } from 'store/contacts/selectors';\nimport { fetchContacts } from 'store/contacts/operations';\nimport { useEffect } from 'react';\nimport {\n  Container,\n  Table,\n  TableContainer,\n  Tbody,\n  Th,\n  Thead,\n  Tr,\n} from '@chakra-ui/react';\n\nconst ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  const filterValue = useSelector(selectFilter);\n  const createRenderListContact = () => {\n    return contacts.filter(el => {\n      return el.name.toLowerCase().includes(filterValue.toLowerCase());\n    });\n  };\n  return (\n    <Container maxW=\"520\">\n      <TableContainer>\n        <Table>\n          <Thead>\n            <Tr bg=\"#a2b5d5\">\n              <Th color=\"white\">Name</Th>\n              <Th color=\"white\">number</Th>\n              <Th color=\"white\" textAlign=\"right\">\n                options\n              </Th>\n            </Tr>\n          </Thead>\n          <Tbody>\n            {createRenderListContact().map(el => {\n              return <ContactsItem key={el.id} contact={el} />;\n            })}\n          </Tbody>\n        </Table>\n      </TableContainer>\n    </Container>\n  );\n};\n\nexport default ContactList;\n","import React from 'react';\nimport { filterUse } from 'store/contacts/filterSlice';\nimport { useDispatch } from 'react-redux';\nimport { Container, FormControl, FormLabel, Input } from '@chakra-ui/react';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const handleInput = ev => {\n    const text = ev.target.value;\n    dispatch(filterUse(text));\n  };\n  return (\n    <Container mb={15}>\n      <FormControl alignItems=\"center\">\n        <FormLabel>Find contacts by name</FormLabel>\n        <Input\n          placeholder=\"search\"\n          type=\"text\"\n          name=\"filter\"\n          onChange={handleInput}\n        />\n      </FormControl>\n    </Container>\n  );\n};\n\nexport default Filter;\n","import React from 'react';\nimport { AddIcon } from '@chakra-ui/icons';\nimport { Button, Container, useDisclosure } from '@chakra-ui/react';\nimport { AddContactModal } from 'components/AddContactModal/AddContactModal';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport Loader from 'components/Loader/Loader';\nimport { useSelector } from 'react-redux';\nimport { selectIsLoading } from 'store/contacts/selectors';\n\nexport const Contacts = () => {\n  const isLoading = useSelector(selectIsLoading);\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  return (\n    <Container pt={30} maxW=\"1000px\">\n      <Button\n        display=\"block\"\n        ml=\"auto\"\n        leftIcon={<AddIcon />}\n        colorScheme=\"blue\"\n        onClick={onOpen}\n      >\n        Add Contact\n      </Button>\n      <AddContactModal isOpen={isOpen} onClose={onClose} />\n      <h2\n        style={{\n          fontSize: '40px',\n          marginBottom: '10px',\n          textAlign: 'center',\n        }}\n      >\n        Contacts\n      </h2>\n      <Filter />\n      {isLoading && <Loader />}\n      <ContactList />\n    </Container>\n  );\n};\n\nexport default Contacts;\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectFilter","filter","_ref","close","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","phone","setPhone","useSelector","dispatch","useDispatch","_useMediaQuery","useMediaQuery","isLargerThan400","handleInput","ev","target","value","_jsx","style","maxWidth","marginLeft","marginRight","padding","onSubmit","preventDefault","newContact","number","find","el","toLowerCase","toLocaleLowerCase","alert","concat","addContact","reset","children","_jsxs","Flex","direction","align","FormControl","isRequired","FormLabel","Input","required","type","onInput","justify","ml","Button","colorScheme","mt","AddContactModal","isOpen","onClose","Modal","ModalOverlay","ModalContent","ModalHeader","ModalBody","ModalCloseButton","ContactForm","contact","Tr","Td","textAlign","onClick","deleteContact","id","DeleteIcon","color","useEffect","fetchContacts","filterValue","Container","maxW","TableContainer","Table","Thead","bg","Th","Tbody","includes","map","ContactsItem","mb","alignItems","placeholder","onChange","text","filterUse","Contacts","_useDisclosure","useDisclosure","onOpen","pt","display","leftIcon","AddIcon","fontSize","marginBottom","Filter","Loader","ContactList"],"sourceRoot":""}