{"version":3,"file":"static/js/111.ce90bdcf.chunk.js","mappings":"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","sources":["components/LoginForm/LoginForm.jsx","pages/Login.jsx"],"sourcesContent":["import React from 'react';\nimport {\n  Alert,\n  AlertDescription,\n  AlertIcon,\n  AlertTitle,\n  Box,\n  Button,\n  Container,\n  FormControl,\n  FormHelperText,\n  FormLabel,\n  Input,\n  InputGroup,\n  InputRightElement,\n  Spinner,\n  Text,\n} from '@chakra-ui/react';\nimport { useNavigate } from 'react-router-dom';\nimport { useState } from 'react';\nimport { logIn } from 'store/auth/operations';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { selectError, selectFetching } from 'store/auth/selectors';\n\nexport const LoginForm = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const error = useSelector(selectError);\n  const fetching = useSelector(selectFetching);\n  const handleNavigate = () => {\n    navigate('/register', { replace: true });\n  };\n  const [show, setShow] = useState(false);\n  const handleShow = () => setShow(!show);\n  const handleInput = ev => {\n    switch (ev.target.name) {\n      case 'email':\n        setEmail(ev.target.value);\n        break;\n\n      case 'password':\n        setPassword(ev.target.value);\n        break;\n\n      default:\n        break;\n    }\n  };\n  const handleSubmit = ev => {\n    ev.preventDefault();\n    const user = {\n      email,\n      password,\n    };\n    dispatch(logIn(user));\n  };\n  return (\n    <Container pt={30}>\n      <form onSubmit={handleSubmit}>\n        <Box\n          padding=\"15px\"\n          maxWidth={500}\n          border=\"2px solid #3b3b3b4e\"\n          borderRadius=\"12\"\n        >\n          <Text fontSize=\"3xl\" fontWeight={500}>\n            Login\n          </Text>\n          {error.length > 0 && (\n            <Alert status=\"error\">\n              <AlertIcon />\n              <AlertTitle>Error</AlertTitle>\n              <AlertDescription>{error}</AlertDescription>\n            </Alert>\n          )}\n          <FormControl isRequired>\n            <FormLabel fontSize={24}>Your email</FormLabel>\n            <Input onInput={handleInput} name=\"email\" type=\"email\" />\n            <FormHelperText>We&apos;ll never share your email.</FormHelperText>\n          </FormControl>\n          <FormControl mb={15} isRequired>\n            <FormLabel fontSize={24}>Your password</FormLabel>\n            <InputGroup size=\"md\">\n              <Input\n                minLength={8}\n                name=\"password\"\n                onInput={handleInput}\n                pr=\"4.5rem\"\n                type={show ? 'text' : 'password'}\n                placeholder=\"Enter password\"\n              />\n              <InputRightElement width=\"4.5rem\">\n                <Button h=\"1.75rem\" size=\"sm\" onClick={handleShow}>\n                  {show ? 'Hide' : 'Show'}\n                </Button>\n              </InputRightElement>\n            </InputGroup>\n          </FormControl>\n          <Button width={73} type=\"submit\" colorScheme=\"green\">\n            {fetching ? <Spinner /> : 'Login'}\n          </Button>\n          <Box display=\"flex\" justifyContent=\"flex-end\">\n            <Text\n              cursor=\"pointer\"\n              color=\"blue\"\n              as=\"span\"\n              onClick={handleNavigate}\n            >\n              Do you not have an account?\n            </Text>\n          </Box>\n        </Box>\n      </form>\n    </Container>\n  );\n};\n","import React from 'react';\nimport { LoginForm } from 'components/LoginForm/LoginForm';\n\nexport const Login = () => {\n  return <LoginForm />;\n};\n\nexport default Login;\n"],"names":["LoginForm","_useState","useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","navigate","useNavigate","dispatch","useDispatch","error","useSelector","selectError","fetching","selectFetching","_useState5","_useState6","show","setShow","handleInput","ev","target","name","value","_jsx","Container","pt","children","onSubmit","preventDefault","user","logIn","_jsxs","Box","padding","maxWidth","border","borderRadius","Text","fontSize","fontWeight","length","Alert","status","AlertIcon","AlertTitle","AlertDescription","FormControl","isRequired","FormLabel","Input","onInput","type","FormHelperText","mb","InputGroup","size","minLength","pr","placeholder","InputRightElement","width","Button","h","onClick","colorScheme","Spinner","display","justifyContent","cursor","color","as","replace","Login"],"sourceRoot":""}